from __future__ import annotations
from typing import List, Optional, Union
{# 
{%- for tp in obj.typings %}
from typing import {{ tp -}}
{% endfor %} 
#}
from ._base import Schema, field
{# {% if obj.is_field %}
from ._base import field
{% endif %} #}
{# 
{% for sh in obj.schemas -%}
from .{{ sh.snake }} import {{ sh.camel }}
{% endfor %} 
#}
{% for obj in schemas %}

class {{ obj.camel }}(
    {{ obj.parrent or 'Schema'}},
    kw_only=True,
    omit_defaults=True
{%- if obj.tag -%},
    tag="{{ obj.tag.value }}",
    tag_field="{{ obj.tag.name }}"
{%- endif %}
):
    """
    {{ obj.md_desc | join | wordwrap(70, True, '\n    ') }}"""

{%- for param in obj.params if param.name != obj.tag.name %}
    {% include "param.py.jinja" -%}
{% else %}
    ...
{% endfor %}


{% endfor %}